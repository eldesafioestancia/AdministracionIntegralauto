import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Link } from "wouter";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { queryClient, apiRequest } from "@/lib/queryClient";
import { useToast } from "@/hooks/use-toast";
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetFooter,
  SheetHeader,
  SheetTitle,
  SheetTrigger,
} from "@/components/ui/sheet";
import ReproductiveButton from "@/components/reproductive-button";
import { 
  Form, 
  FormControl, 
  FormField, 
  FormItem, 
  FormLabel, 
  FormMessage,
  FormDescription 
} from "@/components/ui/form";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { z } from "zod";
import { format } from "date-fns";

// Animal form schema
const animalFormSchema = z.object({
  // Información básica
  cartagena: z.string().min(1, { message: "El número de caravana es requerido" }),
  cartagenaColor: z.string().min(1, { message: "El color de caravana es requerido" }),
  category: z.string().min(1, { message: "La categoría es requerida" }),
  race: z.string().min(1, { message: "La raza es requerida" }),
  birthDate: z.date({
    required_error: "La fecha de nacimiento es requerida",
  }),
  
  // Estado reproductivo
  reproductiveStatus: z.string().optional(),
  reproductiveDetail: z.string().optional(),
  
  // Origen
  origin: z.string().optional(),
  supplier: z.string().optional(),
  purchaseDate: z.date().optional().nullable(),
  
  // Datos productivos
  currentWeight: z.string().optional(),
  lastWeightDate: z.date().optional().nullable(),
  bodyCondition: z.string().optional(),
  
  // Reproduccíon
  lastServiceDate: z.date().optional().nullable(),
  lastServiceType: z.string().optional(),
  expectedDeliveryDate: z.date().optional().nullable(),
  
  // Genealogía
  motherCartagena: z.string().optional(),
  fatherCartagena: z.string().optional(),
  
  // Otros
  marks: z.string().optional(),
  description: z.string().optional(),
  color: z.string().optional(),
  status: z.string().default("active"),
});

type AnimalFormValues = z.infer<typeof animalFormSchema>;

export default function AnimalsIndex() {
  const [search, setSearch] = useState("");
  const [filter, setFilter] = useState("all");
  const [sheetOpen, setSheetOpen] = useState(false);
  const { toast } = useToast();
  
  const { data: animals = [], isLoading, error } = useQuery({
    queryKey: ["/api/animals"],
  });

  const form = useForm<AnimalFormValues>({
    resolver: zodResolver(animalFormSchema),
    defaultValues: {
      cartagena: "",
      cartagenaColor: "blanco",
      category: "vaca",
      race: "angus",
      birthDate: new Date(),
      reproductiveStatus: "vacia",
      origin: "nacido_establecimiento",
      supplier: "",
      purchaseDate: null,
      currentWeight: "",
      lastWeightDate: null,
      bodyCondition: "3",
      lastServiceDate: null,
      lastServiceType: "",
      expectedDeliveryDate: null,
      motherCartagena: "",
      fatherCartagena: "",
      marks: "",
      description: "",
      color: "",
      status: "active",
    },
  });

  if (isLoading) {
    return <div className="py-10 text-center">Cargando animales...</div>;
  }

  if (error) {
    return (
      <div className="py-10 text-center">
        <div className="text-destructive mb-2">Error al cargar los animales</div>
        <Button 
          variant="outline" 
          onClick={() => queryClient.invalidateQueries({ queryKey: ["/api/animals"] })}
        >
          Reintentar
        </Button>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center">
        <div>
          <h1 className="text-2xl font-header font-bold text-neutral-500">Animales</h1>
          <p className="text-neutral-400 text-sm">Gestiona el rodeo de tu establecimiento</p>
        </div>
        
        <div className="flex gap-2 mt-2 sm:mt-0">
          <ReproductiveButton />
        </div>
      </div>
      
      {/* Rest of content will be added back later */}
      <div className="py-10 text-center">
        <p>Sección de animales en construcción</p>
      </div>
    </div>
  );
}